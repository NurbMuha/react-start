{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/react-start/client/src/Pages/SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport bcrypt from 'bcryptjs';\nimport '../Styles/Global.css';\nimport '../Styles/SignUp.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    role: 'user',\n    avatar: null\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.email || !formData.username || !formData.password) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n    if (formData.password.length < 8) {\n      toast.error('Password must be at least 8 characters long');\n      return;\n    }\n    try {\n      // Check for duplicate email or username\n      const usersResponse = await fetch('http://localhost:3001/users');\n      if (!usersResponse.ok) throw new Error('Failed to fetch users');\n      const users = await usersResponse.json();\n      if (users.some(u => u.email === formData.email)) {\n        toast.error('Email already exists');\n        return;\n      }\n      if (users.some(u => u.username === formData.username)) {\n        toast.error('Username already exists');\n        return;\n      }\n      const hashedPassword = await bcrypt.hash(formData.password, 10);\n      const userData = {\n        ...formData,\n        password: hashedPassword,\n        avatar: null\n      };\n      const response = await fetch('http://localhost:3001/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to add user to database');\n      }\n      const allUsersResponse = await fetch('http://localhost:3001/users');\n      const allUsers = await allUsersResponse.json();\n      const newUser = allUsers.find(u => u.email === formData.email);\n      for (const existingUser of allUsers) {\n        if (existingUser.id !== newUser.id) {\n          const conversation = {\n            participants: [newUser.id, existingUser.id],\n            participantNames: [newUser.username, existingUser.username]\n          };\n          await fetch('http://localhost:3001/conversations', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(conversation)\n          });\n        }\n      }\n      toast.success('Account created successfully! Please log in.');\n      setFormData({\n        email: '',\n        username: '',\n        password: '',\n        role: 'user',\n        avatar: null\n      });\n      navigate('/');\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error(error.message || 'An error occurred during sign-up');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"signup-header\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"signup-input\",\n        placeholder: \"Email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"signup-input\",\n        placeholder: \"Username\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"signup-input\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"signup-input readonly-input\",\n        placeholder: \"Role\",\n        name: \"role\",\n        value: formData.role,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"signup-button\",\n        onClick: handleSubmit,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"back-button\",\n        onClick: () => navigate('/'),\n        children: \"Back to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"oDvIRsUrM7J0beZ/HOzp5pi5bRA=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","toast","bcrypt","jsxDEV","_jsxDEV","SignUp","_s","navigate","formData","setFormData","email","username","password","role","avatar","handleChange","e","name","value","target","handleSubmit","preventDefault","error","length","usersResponse","fetch","ok","Error","users","json","some","u","hashedPassword","hash","userData","response","method","headers","body","JSON","stringify","errorData","message","allUsersResponse","allUsers","newUser","find","existingUser","id","conversation","participants","participantNames","success","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","readOnly","onClick","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/react-start/client/src/Pages/SignUp.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport bcrypt from 'bcryptjs';\nimport '../Styles/Global.css';\nimport '../Styles/SignUp.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    role: 'user',\n    avatar: null,\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!formData.email || !formData.username || !formData.password) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n    if (formData.password.length < 8) {\n      toast.error('Password must be at least 8 characters long');\n      return;\n    }\n\n    try {\n      // Check for duplicate email or username\n      const usersResponse = await fetch('http://localhost:3001/users');\n      if (!usersResponse.ok) throw new Error('Failed to fetch users');\n      const users = await usersResponse.json();\n      if (users.some((u) => u.email === formData.email)) {\n        toast.error('Email already exists');\n        return;\n      }\n      if (users.some((u) => u.username === formData.username)) {\n        toast.error('Username already exists');\n        return;\n      }\n\n      const hashedPassword = await bcrypt.hash(formData.password, 10);\n      const userData = {\n        ...formData,\n        password: hashedPassword,\n        avatar: null,\n      };\n\n      const response = await fetch('http://localhost:3001/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to add user to database');\n      }\n      const allUsersResponse = await fetch('http://localhost:3001/users');\n      const allUsers = await allUsersResponse.json();\n      const newUser = allUsers.find(u => u.email === formData.email);\n      for (const existingUser of allUsers) {\n        if (existingUser.id !== newUser.id) {\n          const conversation = {\n            participants: [newUser.id, existingUser.id],\n            participantNames: [newUser.username, existingUser.username],\n          };\n\n          await fetch('http://localhost:3001/conversations', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(conversation),\n          });\n        }\n      }\n\n      toast.success('Account created successfully! Please log in.');\n      setFormData({ email: '', username: '', password: '', role: 'user', avatar: null });\n      navigate('/');\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error(error.message || 'An error occurred during sign-up');\n    }\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <div className=\"signup-form\">\n        <h2 className=\"signup-header\">Sign up</h2>\n        <input\n          type=\"email\"\n          className=\"signup-input\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          className=\"signup-input\"\n          placeholder=\"Username\"\n          name=\"username\"\n          value={formData.username}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"password\"\n          className=\"signup-input\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          className=\"signup-input readonly-input\"\n          placeholder=\"Role\"\n          name=\"role\"\n          value={formData.role}\n          readOnly\n        />\n        <button type=\"submit\" className=\"signup-button\" onClick={handleSubmit}>\n          Sign up\n        </button>\n        <button\n          type=\"button\"\n          className=\"back-button\"\n          onClick={() => navigate('/')}\n        >\n          Back to login\n        </button>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}