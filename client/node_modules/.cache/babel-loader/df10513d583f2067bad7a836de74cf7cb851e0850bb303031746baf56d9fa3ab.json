{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/react-start/client/src/Pages/SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TabBar from '../Components/TabBar';\nimport { toast } from 'react-toastify';\nimport bcrypt from 'bcryptjs';\nimport '../Styles/Global.css';\nimport '../Styles/SignUp.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    role: 'user',\n    avatar: null\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!formData.email || !formData.username || !formData.password) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n    if (formData.password.length < 8) {\n      toast.error('Password must be at least 8 characters long');\n      return;\n    }\n    try {\n      // Check for duplicate email or username\n      const usersResponse = await fetch('http://localhost:3001/users');\n      if (!usersResponse.ok) throw new Error('Failed to fetch users');\n      const users = await usersResponse.json();\n      if (users.some(u => u.email === formData.email)) {\n        toast.error('Email already exists');\n        return;\n      }\n      if (users.some(u => u.username === formData.username)) {\n        toast.error('Username already exists');\n        return;\n      }\n\n      // Hash the password\n      const hashedPassword = await bcrypt.hash(formData.password, 10);\n\n      // Prepare user data for JSON structure\n      const userData = {\n        ...formData,\n        password: hashedPassword,\n        avatar: null // Match JSON structure\n      };\n      const response = await fetch('http://localhost:3001/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to add user to database');\n      }\n      toast.success('Account created successfully! Please log in.');\n      setFormData({\n        email: '',\n        username: '',\n        password: '',\n        role: 'user',\n        avatar: null\n      });\n      navigate('/login');\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error(error.message || 'An error occurred during sign-up');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(TabBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"role\",\n          name: \"role\",\n          value: formData.role,\n          readOnly: true,\n          className: \"readonly-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"signup-button\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"back-button\",\n          onClick: () => navigate('/'),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"oDvIRsUrM7J0beZ/HOzp5pi5bRA=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","TabBar","toast","bcrypt","jsxDEV","_jsxDEV","SignUp","_s","navigate","formData","setFormData","email","username","password","role","avatar","handleChange","e","name","value","target","handleSubmit","preventDefault","error","length","usersResponse","fetch","ok","Error","users","json","some","u","hashedPassword","hash","userData","response","method","headers","body","JSON","stringify","errorData","message","success","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","readOnly","onClick","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/react-start/client/src/Pages/SignUp.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TabBar from '../Components/TabBar';\nimport { toast } from 'react-toastify';\nimport bcrypt from 'bcryptjs';\nimport '../Styles/Global.css';\nimport '../Styles/SignUp.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    role: 'user',\n    avatar: null,\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!formData.email || !formData.username || !formData.password) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    if (formData.password.length < 8) {\n      toast.error('Password must be at least 8 characters long');\n      return;\n    }\n\n    try {\n      // Check for duplicate email or username\n      const usersResponse = await fetch('http://localhost:3001/users');\n      if (!usersResponse.ok) throw new Error('Failed to fetch users');\n      const users = await usersResponse.json();\n\n      if (users.some((u) => u.email === formData.email)) {\n        toast.error('Email already exists');\n        return;\n      }\n\n      if (users.some((u) => u.username === formData.username)) {\n        toast.error('Username already exists');\n        return;\n      }\n\n      // Hash the password\n      const hashedPassword = await bcrypt.hash(formData.password, 10);\n\n      // Prepare user data for JSON structure\n      const userData = {\n        ...formData,\n        password: hashedPassword,\n        avatar: null, // Match JSON structure\n      };\n\n      const response = await fetch('http://localhost:3001/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to add user to database');\n      }\n\n      toast.success('Account created successfully! Please log in.');\n      setFormData({ email: '', username: '', password: '', role: 'user', avatar: null });\n      navigate('/login');\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error(error.message || 'An error occurred during sign-up');\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <TabBar />\n      <h1>Sign Up</h1>\n      <form onSubmit={handleSubmit} className=\"signup-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"role\">Role:</label>\n          <input\n            type=\"text\"\n            id=\"role\"\n            name=\"role\"\n            value={formData.role}\n            readOnly\n            className=\"readonly-input\"\n          />\n        </div>\n        <div className=\"form-buttons\">\n          <button type=\"submit\" className=\"signup-button\">Sign Up</button>\n          <button\n            type=\"button\"\n            className=\"back-button\"\n            onClick={() => navigate('/')}\n          >\n            Back\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}