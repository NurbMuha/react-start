{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/nodes.frontend/src/Components/PostCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FaRegHeart, FaRegComment, FaShareAlt } from \"react-icons/fa\";\nimport { useSelector } from \"react-redux\";\nimport Comments from \"./Comments\";\nimport \"../Styles/PostCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCard = ({\n  post,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n  const currentUser = useSelector(state => state.auth.user);\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedContent, setUpdatedContent] = useState(post.content);\n  const [likesCount, setLikesCount] = useState(post.likesCount);\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n  const handleUpdateContent = () => {\n    if (currentUser) {\n      console.log(`Передаем на редактирование: ID поста ${post.postId}, новый контент: ${updatedContent}`);\n      onEdit(post.postId, updatedContent, currentUser.id);\n    }\n    setIsEditing(false);\n  };\n  const handleLike = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/posts/${post.postId}/like`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        setLikesCount(likesCount + 1);\n      } else {\n        console.error(\"Ошибка при обновлении лайков\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при обновлении лайков:\", error);\n    }\n  };\n  const isPostOwner = currentUser && post.authorName === currentUser.name;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.avatar || \"https://abrakadabra.fun/uploads/posts/2021-12/1640528661_1-abrakadabra-fun-p-serii-chelovek-na-avu-1.png\",\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-author\",\n          children: post.authorName || \"Автор неизвестен\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-date\",\n          children: new Date(post.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: updatedContent,\n        onChange: e => setUpdatedContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateContent,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditToggle,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-actions\",\n      children: [/*#__PURE__*/_jsxDEV(FaRegHeart, {\n        className: \"like-icon\",\n        onClick: handleLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: likesCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaRegComment, {\n        className: \"comment-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaShareAlt, {\n        className: \"share-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      postId: post.postId,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), isPostOwner && !isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-actions-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-btn\",\n        onClick: handleEditToggle,\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-btn\",\n        onClick: () => onDelete(post.postId),\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(PostCard, \"kcwY83lF6/J+x115wmSMYHlOHAg=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","FaRegHeart","FaRegComment","FaShareAlt","useSelector","Comments","jsxDEV","_jsxDEV","PostCard","post","onEdit","onDelete","_s","currentUser","state","auth","user","isEditing","setIsEditing","updatedContent","setUpdatedContent","content","likesCount","setLikesCount","handleEditToggle","handleUpdateContent","console","log","postId","id","handleLike","response","fetch","method","headers","ok","error","isPostOwner","authorName","name","className","children","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","toLocaleDateString","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/nodes.frontend/src/Components/PostCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FaRegHeart, FaRegComment, FaShareAlt } from \"react-icons/fa\";\nimport { useSelector } from \"react-redux\";\nimport Comments from \"./Comments\"; \nimport \"../Styles/PostCard.css\";\n\nconst PostCard = ({ post, onEdit, onDelete }) => {\n  const currentUser = useSelector((state) => state.auth.user);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedContent, setUpdatedContent] = useState(post.content);\n  const [likesCount, setLikesCount] = useState(post.likesCount);\n\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleUpdateContent = () => {\n    if (currentUser) {\n      console.log(`Передаем на редактирование: ID поста ${post.postId}, новый контент: ${updatedContent}`);\n      onEdit(post.postId, updatedContent, currentUser.id);\n    }\n    setIsEditing(false);\n  };\n\n  const handleLike = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/posts/${post.postId}/like`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        setLikesCount(likesCount + 1);\n      } else {\n        console.error(\"Ошибка при обновлении лайков\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при обновлении лайков:\", error);\n    }\n  };\n\n  const isPostOwner = currentUser && post.authorName === currentUser.name;\n\n  return (\n    <div className=\"post-card\">\n      <div className=\"post-header\">\n        <img\n          src={post.avatar || \"https://abrakadabra.fun/uploads/posts/2021-12/1640528661_1-abrakadabra-fun-p-serii-chelovek-na-avu-1.png\"}\n          alt=\"avatar\"\n        />\n        <div>\n          <div className=\"post-author\">{post.authorName || \"Автор неизвестен\"}</div>\n          <div className=\"post-date\">{new Date(post.createdAt).toLocaleDateString()}</div>\n        </div>\n      </div>\n\n      {isEditing ? (\n        <div className=\"post-content\">\n          <textarea\n            value={updatedContent}\n            onChange={(e) => setUpdatedContent(e.target.value)}\n          />\n          <button onClick={handleUpdateContent}>Сохранить</button>\n          <button onClick={handleEditToggle}>Отменить</button>\n        </div>\n      ) : (\n        <div className=\"post-content\">{post.content}</div>\n      )}\n\n      <div className=\"post-actions\">\n        <FaRegHeart className=\"like-icon\" onClick={handleLike} />\n        <span>{likesCount}</span>\n        <FaRegComment className=\"comment-icon\" />\n        <FaShareAlt className=\"share-icon\" />\n      </div>\n\n      {/* Подключаем компонент Comments */}\n      <Comments postId={post.postId} currentUser={currentUser} />\n\n      {/* Отображаем кнопки редактирования и удаления только если currentUser существует и текущий пользователь является автором поста */}\n      {isPostOwner && !isEditing && (\n        <div className=\"post-actions-buttons\">\n          <button className=\"edit-btn\" onClick={handleEditToggle}>Редактировать</button>\n          <button className=\"delete-btn\" onClick={() => onDelete(post.postId)}>Удалить</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PostCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}