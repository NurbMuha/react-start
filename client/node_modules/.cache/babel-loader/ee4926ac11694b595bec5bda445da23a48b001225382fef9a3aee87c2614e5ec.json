{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/react-start/client/src/Pages/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TabBar from '../Components/TabBar';\nimport '../Styles/Home.css';\nimport PostCard from '../Components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [editedContent, setEditedContent] = useState({});\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const postsResponse = await fetch(\"http://localhost:3001/posts\");\n        const postsData = await postsResponse.json();\n        setPosts(postsData);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const usersResponse = await fetch(\"http://localhost:3001/users\");\n        const usersData = await usersResponse.json();\n        setUsers(usersData);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    fetchPosts();\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: [/*#__PURE__*/_jsxDEV(TabBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => {\n        const matchedUser = users.find(user => user.id === post.userId);\n        const currentContent = editedContent[post.id] || '';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(PostCard, {\n            post: post,\n            author: matchedUser ? matchedUser.username : \"Unknown\",\n            date: post.created_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              try {\n                const response = await fetch(`http://localhost:3001/posts/${post.id}`, {\n                  method: 'PATCH',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    content: currentContent\n                  })\n                });\n                if (response.ok) {\n                  const updatedPost = await response.json();\n                  setPosts(prevPosts => prevPosts.map(p => p.id === updatedPost.id ? updatedPost : p));\n                }\n              } catch (error) {\n                console.error(`Error updating post with ID: ${post.id}`, error);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: currentContent,\n              onChange: e => setEditedContent({\n                ...editedContent,\n                [post.id]: e.target.value\n              }),\n              placeholder: \"Edit content here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"vDOLy8LtFUsgmYOi23QDqD2fmak=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","TabBar","PostCard","jsxDEV","_jsxDEV","Search","_s","posts","setPosts","users","setUsers","editedContent","setEditedContent","fetchPosts","postsResponse","fetch","postsData","json","error","console","fetchUsers","usersResponse","usersData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","matchedUser","find","user","id","userId","currentContent","author","username","date","created_at","onClick","response","method","headers","body","JSON","stringify","content","ok","updatedPost","prevPosts","p","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/react-start/client/src/Pages/Search.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TabBar from '../Components/TabBar';\nimport '../Styles/Home.css'; \nimport PostCard from '../Components/PostCard'; \n\n\nfunction Search () {\n    const [posts, setPosts] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [editedContent, setEditedContent] = useState({});\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n          try {\n            const postsResponse = await fetch(\"http://localhost:3001/posts\");\n            const postsData = await postsResponse.json();\n            setPosts(postsData);\n          } catch (error) {\n            console.error(\"Error fetching posts:\", error);\n          }\n        };\n    \n        const fetchUsers = async () => {\n          try {\n            const usersResponse = await fetch(\"http://localhost:3001/users\");\n            const usersData = await usersResponse.json();\n            setUsers(usersData);\n          } catch (error) {\n            console.error(\"Error fetching users:\", error);\n          }\n        };\n    \n        fetchPosts();\n            fetchUsers();\n        }, []);\n        \n    return (\n        <div className=\"background-container\">\n      <TabBar />\n      <div className=\"posts-container\">\n{posts.map(post => {\n  const matchedUser = users.find(user => user.id === post.userId);\n  const currentContent = editedContent[post.id] || '';\n\n  return (\n    <div key={post.id}>\n      <PostCard\n        post={post}\n        author={matchedUser ? matchedUser.username : \"Unknown\"}\n        date={post.created_at}\n      />\n      <button\n        onClick={async () => {\n          try {\n            const response = await fetch(`http://localhost:3001/posts/${post.id}`, {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({ content: currentContent }), \n            });\n            if (response.ok) {\n              const updatedPost = await response.json();\n              setPosts(prevPosts =>\n                prevPosts.map(p => (p.id === updatedPost.id ? updatedPost : p))\n              );\n            }\n          } catch (error) {\n            console.error(`Error updating post with ID: ${post.id}`, error);\n          }\n        }}\n      >\n        <h1>Edit</h1>\n      </button>\n      <label>\n        Content:\n        <input\n          value={currentContent}\n          onChange={(e) => setEditedContent({ ...editedContent, [post.id]: e.target.value })}\n          placeholder=\"Edit content here\"\n        />\n      </label>\n    </div>\n  );\n})}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}