{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/nodes.frontend/src/Components/Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PostCard from \"./PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/posts\");\n        const data = await response.json();\n        setPosts(data);\n        console.log(\"Посты загружены:\", data);\n      } catch (error) {\n        setError(\"Не удалось загрузить посты. Попробуйте снова позже.\");\n        console.error(\"Ошибка при загрузке постов:\", error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleEditPost = async (postId, updatedContent, authorId) => {\n    console.log(`Редактирование поста с ID: ${postId}, Новый контент: ${updatedContent}, Автор ID: ${authorId}`);\n    try {\n      const response = await fetch(`http://localhost:8080/api/posts/${postId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          authorId: authorId,\n          content: updatedContent\n        })\n      });\n      if (response.ok) {\n        console.log(\"✅ Пост обновлен успешно\");\n        setPosts(posts.map(post => post.postId === postId ? {\n          ...post,\n          content: updatedContent\n        } : post));\n      } else {\n        console.error(\"Ошибка при обновлении поста\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при обновлении поста:\", error);\n    }\n  };\n  const handleDeletePost = async postId => {\n    console.log(`Удаление поста с ID: ${postId}`);\n    try {\n      const response = await fetch(`http://localhost:8080/api/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        console.log(\"✅ Пост удален успешно\");\n        setPosts(posts.filter(post => post.postId !== postId));\n      } else {\n        console.error(\"Ошибка при удалении поста\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при удалении поста:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post,\n        onEdit: handleEditPost,\n        onDelete: handleDeletePost\n      }, post.postId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed-scrollbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Feed, \"k/i6/CQ9z/20h34rTderKnfEXI4=\");\n_c = Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","PostCard","jsxDEV","_jsxDEV","Feed","_s","posts","setPosts","error","setError","fetchPosts","response","fetch","data","json","console","log","handleEditPost","postId","updatedContent","authorId","method","headers","body","JSON","stringify","content","ok","map","post","handleDeletePost","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/nodes.frontend/src/Components/Feed.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PostCard from \"./PostCard\"; \n\nexport default function Feed() {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null); \n\n  \n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/posts\");\n        const data = await response.json();\n        setPosts(data);\n        console.log(\"Посты загружены:\", data);\n      } catch (error) {\n        setError(\"Не удалось загрузить посты. Попробуйте снова позже.\");\n        console.error(\"Ошибка при загрузке постов:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  \n  const handleEditPost = async (postId, updatedContent, authorId) => {\n    console.log(`Редактирование поста с ID: ${postId}, Новый контент: ${updatedContent}, Автор ID: ${authorId}`);\n\n    try {\n      const response = await fetch(`http://localhost:8080/api/posts/${postId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          authorId: authorId,  \n          content: updatedContent,\n        }),\n      });\n\n      if (response.ok) {\n        console.log(\"✅ Пост обновлен успешно\");\n        \n        setPosts(posts.map(post => post.postId === postId ? { ...post, content: updatedContent } : post));\n      } else {\n        console.error(\"Ошибка при обновлении поста\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при обновлении поста:\", error);\n    }\n  };\n\n  \n  const handleDeletePost = async (postId) => {\n    console.log(`Удаление поста с ID: ${postId}`);\n\n    try {\n      const response = await fetch(`http://localhost:8080/api/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        console.log(\"✅ Пост удален успешно\");\n        \n        setPosts(posts.filter(post => post.postId !== postId));\n      } else {\n        console.error(\"Ошибка при удалении поста\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при удалении поста:\", error);\n    }\n  };\n\n  return (\n    <div className=\"feed-container\">\n      {/* Если есть ошибка, показываем сообщение */}\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Контейнер для постов */}\n      <div className=\"posts-container\">\n        {posts.map((post) => (\n          <PostCard\n            key={post.postId}\n            post={post}\n            onEdit={handleEditPost}\n            onDelete={handleDeletePost}\n          />\n        ))}\n      </div>\n\n      {/* Фиксированный скроллбар */}\n      <div className=\"fixed-scrollbar\"></div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAGxCD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,QAAQ,CAACM,IAAI,CAAC;QACdE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC;MACvC,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdC,QAAQ,CAAC,qDAAqD,CAAC;QAC/DM,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMO,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEC,cAAc,EAAEC,QAAQ,KAAK;IACjEL,OAAO,CAACC,GAAG,CAAC,8BAA8BE,MAAM,oBAAoBC,cAAc,eAAeC,QAAQ,EAAE,CAAC;IAE5G,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCM,MAAM,EAAE,EAAE;QACxEG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBL,QAAQ,EAAEA,QAAQ;UAClBM,OAAO,EAAEP;QACX,CAAC;MACH,CAAC,CAAC;MAEF,IAAIR,QAAQ,CAACgB,EAAE,EAAE;QACfZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QAEtCT,QAAQ,CAACD,KAAK,CAACsB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACX,MAAM,KAAKA,MAAM,GAAG;UAAE,GAAGW,IAAI;UAAEH,OAAO,EAAEP;QAAe,CAAC,GAAGU,IAAI,CAAC,CAAC;MACnG,CAAC,MAAM;QACLd,OAAO,CAACP,KAAK,CAAC,6BAA6B,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAGD,MAAMsB,gBAAgB,GAAG,MAAOZ,MAAM,IAAK;IACzCH,OAAO,CAACC,GAAG,CAAC,wBAAwBE,MAAM,EAAE,CAAC;IAE7C,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCM,MAAM,EAAE,EAAE;QACxEG,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIX,QAAQ,CAACgB,EAAE,EAAE;QACfZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QAEpCT,QAAQ,CAACD,KAAK,CAACyB,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACX,MAAM,KAAKA,MAAM,CAAC,CAAC;MACxD,CAAC,MAAM;QACLH,OAAO,CAACP,KAAK,CAAC,2BAA2B,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEL,OAAA;IAAK6B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAE5BzB,KAAK,iBAAIL,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEzB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAGtDlC,OAAA;MAAK6B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7B3B,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACd1B,OAAA,CAACF,QAAQ;QAEP4B,IAAI,EAAEA,IAAK;QACXS,MAAM,EAAErB,cAAe;QACvBsB,QAAQ,EAAET;MAAiB,GAHtBD,IAAI,CAACX,MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIjB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNlC,OAAA;MAAK6B,SAAS,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAAChC,EAAA,CA9FuBD,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}