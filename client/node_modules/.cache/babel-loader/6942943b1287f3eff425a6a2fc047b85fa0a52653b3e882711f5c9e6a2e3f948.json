{"ast":null,"code":"// usersSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  users: []\n};\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    setUsers(state, action) {\n      console.log(\"✅ SET_USERS reducer called:\", action.payload);\n      state.users = action.payload;\n    },\n    removeUser(state, action) {\n      console.log(\"✅ REMOVE_USER reducer called:\", action.payload);\n      state.users = state.users.filter(user => user.id !== action.payload);\n    },\n    updateUserRole(state, action) {\n      console.log(\"✅ UPDATE_USER_ROLE reducer called:\", action.payload);\n      const {\n        userId,\n        newRole\n      } = action.payload;\n      const user = state.users.find(user => user.id === userId);\n      if (user) {\n        user.role = newRole;\n      }\n    }\n  }\n});\nexport const {\n  setUsers,\n  removeUser,\n  updateUserRole\n} = usersSlice.actions;\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","users","usersSlice","name","reducers","setUsers","state","action","console","log","payload","removeUser","filter","user","id","updateUserRole","userId","newRole","find","role","actions","reducer"],"sources":["/Users/nurbol/Documents/nodes.frontend/src/store/usersSlice.js"],"sourcesContent":["// usersSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  users: [],\n};\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    setUsers(state, action) {\n      console.log(\"✅ SET_USERS reducer called:\", action.payload);\n      state.users = action.payload;\n    },\n    removeUser(state, action) {\n      console.log(\"✅ REMOVE_USER reducer called:\", action.payload);\n      state.users = state.users.filter(user => user.id !== action.payload);\n    },\n    updateUserRole(state, action) {\n      console.log(\"✅ UPDATE_USER_ROLE reducer called:\", action.payload);\n      const { userId, newRole } = action.payload;\n      const user = state.users.find(user => user.id === userId);\n      if (user) {\n        user.role = newRole;\n      }\n    },\n  },\n});\n\nexport const { setUsers, removeUser, updateUserRole } = usersSlice.actions;\nexport default usersSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,MAAM,CAACG,OAAO,CAAC;MAC1DJ,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACG,OAAO;IAC9B,CAAC;IACDC,UAAUA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,MAAM,CAACG,OAAO,CAAC;MAC5DJ,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACG,OAAO,CAAC;IACtE,CAAC;IACDK,cAAcA,CAACT,KAAK,EAAEC,MAAM,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,MAAM,CAACG,OAAO,CAAC;MACjE,MAAM;QAAEM,MAAM;QAAEC;MAAQ,CAAC,GAAGV,MAAM,CAACG,OAAO;MAC1C,MAAMG,IAAI,GAAGP,KAAK,CAACL,KAAK,CAACiB,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKE,MAAM,CAAC;MACzD,IAAIH,IAAI,EAAE;QACRA,IAAI,CAACM,IAAI,GAAGF,OAAO;MACrB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,QAAQ;EAAEM,UAAU;EAAEI;AAAe,CAAC,GAAGb,UAAU,CAACkB,OAAO;AAC1E,eAAelB,UAAU,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}