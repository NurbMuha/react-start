{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/react-start/client/src/Pages/ManageUsers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TabBar from '../Components/TabBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageUsers() {\n  _s();\n  const [users, setUsers] = useState([]);\n\n  // Загружаем список пользователей при загрузке страницы\n  const fetchUsers = () => {\n    fetch(\"http://localhost:3001/users\").then(response => response.json()).then(data => setUsers(data)).catch(error => console.error('Error fetching users:', error));\n  };\n  useEffect(() => {\n    fetchUsers(); // Загружаем пользователей при монтировании компонента\n  }, []);\n\n  // Функция для блокировки пользователя\n  const banUser = userId => {\n    fetch(`http://localhost:3001/users/${userId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        role: \"ban\"\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update user role');\n      }\n      return response.json();\n    }).then(() => {\n      fetchUsers(); // Повторно загружаем пользователей после обновления\n    }).catch(error => console.error('Error banning user:', error));\n  };\n  const resetPassword = userId => {\n    fetch(`http://localhost:3001/users/${userId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: \"12345678\"\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to reset password');\n      }\n      return response.json();\n    }).then(() => {\n      fetchUsers(); // Обновляем список пользователей\n    }).catch(error => console.error('Error resetting password:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: [/*#__PURE__*/_jsxDEV(TabBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.username, \" - status: \", user.role || 'Banned', /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => banUser(user.id),\n            children: \"Ban\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => resetPassword(user.id),\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(ManageUsers, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = ManageUsers;\nexport default ManageUsers;\nvar _c;\n$RefreshReg$(_c, \"ManageUsers\");","map":{"version":3,"names":["React","useEffect","useState","TabBar","jsxDEV","_jsxDEV","ManageUsers","_s","users","setUsers","fetchUsers","fetch","then","response","json","data","catch","error","console","banUser","userId","method","headers","body","JSON","stringify","role","ok","Error","resetPassword","password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","username","onClick","id","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/react-start/client/src/Pages/ManageUsers.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TabBar from '../Components/TabBar';\n\nfunction ManageUsers() {\n    const [users, setUsers] = useState([]);\n\n    // Загружаем список пользователей при загрузке страницы\n    const fetchUsers = () => {\n        fetch(\"http://localhost:3001/users\")\n            .then(response => response.json())\n            .then(data => setUsers(data))\n            .catch(error => console.error('Error fetching users:', error));\n    };\n\n    useEffect(() => {\n        fetchUsers(); // Загружаем пользователей при монтировании компонента\n    }, []);\n\n    // Функция для блокировки пользователя\n    const banUser = (userId) => {\n        fetch(`http://localhost:3001/users/${userId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ role: \"ban\" }),\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to update user role');\n            }\n            return response.json();\n        })\n        .then(() => {\n            fetchUsers(); // Повторно загружаем пользователей после обновления\n        })\n        .catch(error => console.error('Error banning user:', error));\n    };\n\n    const resetPassword = (userId) => {\n        fetch(`http://localhost:3001/users/${userId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ password: \"12345678\" }),\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to reset password');\n            }\n            return response.json();\n        })\n        .then(() => {\n            fetchUsers(); // Обновляем список пользователей\n        })\n        .catch(error => console.error('Error resetting password:', error));\n    };\n\n    return (\n        <div className=\"background-container\">\n            <TabBar />\n            <div className=\"content\">\n                <h1>Manage Users</h1>\n                <ul>\n                    {users.map(user => (\n                        <li key={user.id}>\n                            {user.username} - status: {user.role || 'Banned'}\n                            <button onClick={() => banUser(user.id)}>Ban</button>\n                            <button onClick={() => resetPassword(user.id)}>Reset Password</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default ManageUsers;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}