{"ast":null,"code":"const initialState = {\n  notifications: []\n};\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      const updatedNotifications = [...state.notifications, action.payload];\n      localStorage.setItem('notifications', JSON.stringify(updatedNotifications)); // Сохраняем уведомления в localStorage\n      return {\n        ...state,\n        notifications: updatedNotifications\n      };\n    case 'REMOVE_NOTIFICATION':\n      const filteredNotifications = state.notifications.filter(notification => notification.id !== action.payload);\n      localStorage.setItem('notifications', JSON.stringify(filteredNotifications)); // Обновляем уведомления в localStorage\n      return {\n        ...state,\n        notifications: filteredNotifications\n      };\n    default:\n      return state;\n  }\n};\nexport default notificationReducer;","map":{"version":3,"names":["initialState","notifications","notificationReducer","state","action","type","updatedNotifications","payload","localStorage","setItem","JSON","stringify","filteredNotifications","filter","notification","id"],"sources":["/Users/nurbol/Documents/react-start/react-start/client/src/notificationReducer.js"],"sourcesContent":["const initialState = {\n    notifications: []\n  };\n  \n  const notificationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_NOTIFICATION':\n            const updatedNotifications = [...state.notifications, action.payload];\n            localStorage.setItem('notifications', JSON.stringify(updatedNotifications));  // Сохраняем уведомления в localStorage\n            return { ...state, notifications: updatedNotifications };\n        \n        case 'REMOVE_NOTIFICATION':\n            const filteredNotifications = state.notifications.filter(notification => notification.id !== action.payload);\n            localStorage.setItem('notifications', JSON.stringify(filteredNotifications));  // Обновляем уведомления в localStorage\n            return { ...state, notifications: filteredNotifications };\n      default:\n        return state;\n    }\n  };\n  \n  export default notificationReducer; "],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,kBAAkB;MACnB,MAAMC,oBAAoB,GAAG,CAAC,GAAGH,KAAK,CAACF,aAAa,EAAEG,MAAM,CAACG,OAAO,CAAC;MACrEC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACL,oBAAoB,CAAC,CAAC,CAAC,CAAE;MAC9E,OAAO;QAAE,GAAGH,KAAK;QAAEF,aAAa,EAAEK;MAAqB,CAAC;IAE5D,KAAK,qBAAqB;MACtB,MAAMM,qBAAqB,GAAGT,KAAK,CAACF,aAAa,CAACY,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACC,EAAE,KAAKX,MAAM,CAACG,OAAO,CAAC;MAC5GC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACC,qBAAqB,CAAC,CAAC,CAAC,CAAE;MAC/E,OAAO;QAAE,GAAGT,KAAK;QAAEF,aAAa,EAAEW;MAAsB,CAAC;IAC/D;MACE,OAAOT,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}