{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/nodes.frontend/src/Components/Comment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comment,\n  currentUser,\n  handleEditComment,\n  handleDeleteComment\n}) => {\n  _s();\n  var _comment$user2, _comment$user3;\n  const [authorName, setAuthorName] = useState(\"Загрузка...\");\n  useEffect(() => {\n    var _comment$user;\n    const userId = ((_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.id) || comment.userId;\n    const fetchAuthorName = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/users/${userId}`);\n        if (!response.ok) throw new Error(\"Ошибка при получении имени пользователя\");\n        const userData = await response.json();\n        setAuthorName(userData.name);\n      } catch (error) {\n        console.error(\"Ошибка при загрузке имени автора комментария:\", error);\n        setAuthorName(\"Неизвестный пользователь\");\n      }\n    };\n    if (userId) {\n      fetchAuthorName();\n    }\n  }, [(_comment$user2 = comment.user) === null || _comment$user2 === void 0 ? void 0 : _comment$user2.id, comment.userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-author\",\n      children: [authorName, (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === (((_comment$user3 = comment.user) === null || _comment$user3 === void 0 ? void 0 : _comment$user3.id) || comment.userId) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditComment(comment.commentId, prompt(\"Edit comment:\", comment.content)),\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteComment(comment.commentId),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content\",\n      children: comment.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-date\",\n      children: new Date(comment.createdAt).toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, comment.commentId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"rU10MqGi7kRk4uZpfjK2mHkSw+o=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Comment","comment","currentUser","handleEditComment","handleDeleteComment","_s","_comment$user2","_comment$user3","authorName","setAuthorName","_comment$user","userId","user","id","fetchAuthorName","response","fetch","ok","Error","userData","json","name","error","console","className","children","onClick","commentId","prompt","content","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/nodes.frontend/src/Components/Comment.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Comment = ({ comment, currentUser, handleEditComment, handleDeleteComment }) => {\n  const [authorName, setAuthorName] = useState(\"Загрузка...\");\n\n  useEffect(() => {\n    \n    const userId = comment.user?.id || comment.userId;\n\n    const fetchAuthorName = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/users/${userId}`);\n        if (!response.ok) throw new Error(\"Ошибка при получении имени пользователя\");\n        const userData = await response.json();\n        setAuthorName(userData.name);\n      } catch (error) {\n        console.error(\"Ошибка при загрузке имени автора комментария:\", error);\n        setAuthorName(\"Неизвестный пользователь\");\n      }\n    };\n\n    if (userId) {\n      fetchAuthorName();\n    }\n  }, [comment.user?.id, comment.userId]);\n\n  return (\n    <div key={comment.commentId} className=\"comment\">\n      <div className=\"comment-author\">\n        {authorName}\n\n        {/* Кнопки редактирования и удаления */}\n        {currentUser?.id === (comment.user?.id || comment.userId) && (\n          <div className=\"comment-actions\">\n            <button\n              onClick={() =>\n                handleEditComment(\n                  comment.commentId,\n                  prompt(\"Edit comment:\", comment.content)\n                )\n              }\n            >\n              Редактировать\n            </button>\n            <button onClick={() => handleDeleteComment(comment.commentId)}>\n              Удалить\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"comment-content\">{comment.content}</div>\n      <div className=\"comment-date\">\n        {new Date(comment.createdAt).toLocaleDateString()}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}