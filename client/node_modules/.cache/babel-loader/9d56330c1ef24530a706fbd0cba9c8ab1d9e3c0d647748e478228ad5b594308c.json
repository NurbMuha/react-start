{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/nodes.frontend/src/Pages/AdminPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../Styles/AdminPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await fetch('http://localhost:8080/api/admin/users');\n      const data = await response.json();\n      setUsers(data);\n      setLoading(false);\n    };\n    fetchUsers();\n  }, []);\n  const handleChangeRole = async (userId, currentRole) => {\n    const newRole = currentRole === 'USER' ? 'MODERATOR' : 'USER';\n    const response = await fetch(`http://localhost:8080/api/admin/users/${userId}/role`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        role: newRole\n      })\n    });\n    if (response.ok) {\n      // Обновляем состояние пользователей с новой ролью\n      setUsers(prevUsers => prevUsers.map(user => user.id === userId ? {\n        ...user,\n        role: newRole\n      } : user));\n      setSuccessMessage('Роль пользователя успешно изменена');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0418\\u043C\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0420\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.filter(user => user.role === 'USER' || user.role === 'MODERATOR').map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"role-actions\",\n            children: user.role !== 'ADMIN' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleChangeRole(user.id, user.role),\n              children: \"\\u0421\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0440\\u043E\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"gNSNvxZ1LQhNadOc9+GtmEM4k6s=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminPage","_s","users","setUsers","loading","setLoading","successMessage","setSuccessMessage","fetchUsers","response","fetch","data","json","handleChangeRole","userId","currentRole","newRole","method","headers","body","JSON","stringify","role","ok","prevUsers","map","user","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","name","onClick","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/nodes.frontend/src/Pages/AdminPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../Styles/AdminPage.css';\n\nconst AdminPage = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await fetch('http://localhost:8080/api/admin/users');\n      const data = await response.json();\n      setUsers(data);\n      setLoading(false);\n    };\n\n    fetchUsers();\n  }, []);\n\n  const handleChangeRole = async (userId, currentRole) => {\n    const newRole = currentRole === 'USER' ? 'MODERATOR' : 'USER';\n    const response = await fetch(`http://localhost:8080/api/admin/users/${userId}/role`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ role: newRole }),\n    });\n\n    if (response.ok) {\n      // Обновляем состояние пользователей с новой ролью\n      setUsers(prevUsers =>\n        prevUsers.map(user =>\n          user.id === userId ? { ...user, role: newRole } : user\n        )\n      );\n      setSuccessMessage('Роль пользователя успешно изменена');\n    }\n  };\n\n  if (loading) {\n    return <div>Загрузка...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Управление пользователями</h1>\n\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\n\n      <table>\n        <thead>\n          <tr>\n            <th>Имя</th>\n            <th>Роль</th>\n            <th>Действия</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users\n            .filter(user => user.role === 'USER' || user.role === 'MODERATOR')\n            .map(user => (\n              <tr key={user.id}>\n                <td>{user.name}</td>\n                <td>{user.role}</td>\n                <td className=\"role-actions\">\n                  {user.role !== 'ADMIN' && (\n                    <button onClick={() => handleChangeRole(user.id, user.role)}>\n                      Сменить роль\n                    </button>\n                  )}\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}