{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/react-start/client/src/Pages/AddPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport TabBar from '../Components/TabBar';\nimport '../Styles/AddPost.css';\nimport { FaUpload } from 'react-icons/fa'; // Import upload icon from react-icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPost() {\n  _s();\n  const user = useSelector(state => state.auth.user);\n  const navigate = useNavigate();\n  const [content, setContent] = useState('');\n  const [title, setTitle] = useState('');\n  const [media, setMedia] = useState(null);\n  const [base64Image, setBase64Image] = useState(null);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (!file.type.startsWith('image/')) {\n        toast.error('Please select an image file');\n        return;\n      }\n      if (file.size > 5 * 1024 * 1024) {\n        toast.error('Image size must be less than 5MB');\n        return;\n      }\n      setMedia(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setBase64Image(reader.result);\n      };\n      reader.onerror = () => {\n        toast.error('Failed to read image file');\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleAddPost = async () => {\n    if (!content || !title) {\n      toast.warn('Please fill in title and content');\n      return;\n    }\n    if (!user || !user.id) {\n      toast.warn('You must be logged in to create a post');\n      navigate('/login');\n      return;\n    }\n    if (user.role === 'ban') {\n      toast.error('You are banned and cannot create posts');\n      return;\n    }\n    const postData = {\n      title,\n      content,\n      userId: user.id,\n      created_at: new Date().toISOString(),\n      image: base64Image\n    };\n    try {\n      const response = await fetch('http://localhost:3001/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n      if (!response.ok) throw new Error('Failed to add post');\n      toast.success('Post added successfully!');\n      navigate('/home');\n    } catch (error) {\n      console.error('Error adding post:', error);\n      toast.error('An error occurred while adding the post');\n    }\n  };\n\n  // Default avatar if user has no image\n  const avatarUrl = (user === null || user === void 0 ? void 0 : user.profileImage) || 'https://via.placeholder.com/40'; // Replace with actual avatar URL or placeholder\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-post-container\",\n    children: [/*#__PURE__*/_jsxDEV(TabBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-post-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarUrl,\n            alt: \"User Avatar\",\n            className: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username\",\n            children: (user === null || user === void 0 ? void 0 : user.username) || 'Anonymous'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-post-textarea\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-post-file\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          id: \"media-upload\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"media-upload\",\n          className: \"upload-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), \" Upload Image\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), base64Image && /*#__PURE__*/_jsxDEV(\"div\", {\n          classHeader: \"image-preview\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: base64Image,\n            alt: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-post-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddPost,\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPost, \"bqY1be4lgwL+GomOYgTesbGjUno=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = AddPost;\nexport default AddPost;\nvar _c;\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"names":["React","useState","useNavigate","useSelector","toast","TabBar","FaUpload","jsxDEV","_jsxDEV","AddPost","_s","user","state","auth","navigate","content","setContent","title","setTitle","media","setMedia","base64Image","setBase64Image","handleFileChange","e","file","target","files","type","startsWith","error","size","reader","FileReader","onloadend","result","onerror","readAsDataURL","handleAddPost","warn","id","role","postData","userId","created_at","Date","toISOString","image","response","fetch","method","headers","body","JSON","stringify","ok","Error","success","console","avatarUrl","profileImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","username","placeholder","value","onChange","required","accept","htmlFor","classHeader","onClick","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/react-start/client/src/Pages/AddPost.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport TabBar from '../Components/TabBar';\nimport '../Styles/AddPost.css';\nimport { FaUpload } from 'react-icons/fa'; // Import upload icon from react-icons\n\nfunction AddPost() {\n  const user = useSelector((state) => state.auth.user);\n  const navigate = useNavigate();\n  const [content, setContent] = useState('');\n  const [title, setTitle] = useState('');\n  const [media, setMedia] = useState(null);\n  const [base64Image, setBase64Image] = useState(null);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (!file.type.startsWith('image/')) {\n        toast.error('Please select an image file');\n        return;\n      }\n      if (file.size > 5 * 1024 * 1024) {\n        toast.error('Image size must be less than 5MB');\n        return;\n      }\n      setMedia(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setBase64Image(reader.result);\n      };\n      reader.onerror = () => {\n        toast.error('Failed to read image file');\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleAddPost = async () => {\n    if (!content || !title) {\n      toast.warn('Please fill in title and content');\n      return;\n    }\n\n    if (!user || !user.id) {\n      toast.warn('You must be logged in to create a post');\n      navigate('/login');\n      return;\n    }\n\n    if (user.role === 'ban') {\n      toast.error('You are banned and cannot create posts');\n      return;\n    }\n\n    const postData = {\n      title,\n      content,\n      userId: user.id,\n      created_at: new Date().toISOString(),\n      image: base64Image,\n    };\n\n    try {\n      const response = await fetch('http://localhost:3001/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(postData),\n      });\n\n      if (!response.ok) throw new Error('Failed to add post');\n      toast.success('Post added successfully!');\n      navigate('/home');\n    } catch (error) {\n      console.error('Error adding post:', error);\n      toast.error('An error occurred while adding the post');\n    }\n  };\n\n  // Default avatar if user has no image\n  const avatarUrl = user?.profileImage || 'https://via.placeholder.com/40'; // Replace with actual avatar URL or placeholder\n\n  return (\n    <div className=\"add-post-container\">\n      <TabBar />\n      <div className=\"add-post-content\">\n        <div className=\"add-post-header\">\n          <div className=\"user-info\">\n            <img src={avatarUrl} alt=\"User Avatar\" className=\"avatar\" />\n            <span className=\"username\">{user?.username || 'Anonymous'}</span>\n          </div>\n          <h1>Add Post</h1>\n        </div>\n        <div className=\"add-post-textarea\">\n          <input\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n          <textarea\n            placeholder=\"Content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"add-post-file\">\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            id=\"media-upload\"\n            onChange={handleFileChange}\n          />\n          <label htmlFor=\"media-upload\" className=\"upload-button\">\n            <FaUpload /> Upload Image\n          </label>\n          {base64Image && (\n            <div classHeader=\"image-preview\">\n              <img\n                src={base64Image}\n                alt=\"Preview\"\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"add-post-button\">\n          <button onClick={handleAddPost}>Add Post</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}