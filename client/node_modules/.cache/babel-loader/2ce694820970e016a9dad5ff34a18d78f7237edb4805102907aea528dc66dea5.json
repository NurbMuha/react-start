{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/react-start/client/src/Pages/Chats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport '../Styles/Chats.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chats() {\n  _s();\n  const user = useSelector(state => state.auth.user); // Получаем текущего пользователя из Redux\n  const navigate = useNavigate();\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    if (!user) {\n      navigate('/login'); // Перенаправляем на страницу логина, если пользователь не авторизован\n      return;\n    }\n\n    // Загружаем беседы пользователя\n    const fetchConversations = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/conversations/${user.id}`);\n        const data = await response.json();\n        setConversations(data);\n      } catch (error) {\n        console.error('Error fetching conversations:', error);\n      }\n    };\n    fetchConversations();\n  }, [user, navigate]);\n\n  // Загружаем сообщения для выбранной беседы\n  const fetchMessages = async conversationId => {\n    try {\n      const response = await fetch(`http://localhost:3001/messages/${conversationId}`);\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  // Обрабатываем выбор беседы\n  const handleSelectConversation = conversation => {\n    setSelectedConversation(conversation);\n    fetchMessages(conversation.id);\n  };\n\n  // Отправляем новое сообщение\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    const message = {\n      conversation_id: selectedConversation.id,\n      sender_id: user.id,\n      content: newMessage\n    };\n    try {\n      const response = await fetch('http://localhost:3001/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(message)\n      });\n      if (response.ok) {\n        const savedMessage = await response.json();\n        setMessages(prevMessages => [...prevMessages, savedMessage]);\n        setNewMessage('');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `conversation-item ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conversation.id ? 'active' : ''}`,\n        onClick: () => handleSelectConversation(conversation),\n        children: conversation.participants.filter(participantId => participantId !== user.id).map(participantId => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"User \", participantId]\n        }, participantId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this))\n      }, conversation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: selectedConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-list\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-item ${message.sender_id === user.id ? 'sent' : 'received'}`,\n            children: message.content\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-conversation-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a conversation to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Chats, \"H9vD5BA/ZxGtoEkJTR0JPwaDYVs=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","_s","user","state","auth","navigate","conversations","setConversations","messages","setMessages","selectedConversation","setSelectedConversation","newMessage","setNewMessage","fetchConversations","response","fetch","id","data","json","error","console","fetchMessages","conversationId","handleSelectConversation","conversation","handleSendMessage","trim","message","conversation_id","sender_id","content","method","headers","body","JSON","stringify","ok","savedMessage","prevMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","participants","filter","participantId","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/react-start/client/src/Pages/Chats.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport '../Styles/Chats.css';\n\nfunction Chats() {\n    const user = useSelector((state) => state.auth.user); // Получаем текущего пользователя из Redux\n    const navigate = useNavigate();\n    const [conversations, setConversations] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [selectedConversation, setSelectedConversation] = useState(null);\n    const [newMessage, setNewMessage] = useState('');\n\n    useEffect(() => {\n        if (!user) {\n            navigate('/login'); // Перенаправляем на страницу логина, если пользователь не авторизован\n            return;\n        }\n\n        // Загружаем беседы пользователя\n        const fetchConversations = async () => {\n            try {\n                const response = await fetch(`http://localhost:3001/conversations/${user.id}`);\n                const data = await response.json();\n                setConversations(data);\n            } catch (error) {\n                console.error('Error fetching conversations:', error);\n            }\n        };\n\n        fetchConversations();\n    }, [user, navigate]);\n\n    // Загружаем сообщения для выбранной беседы\n    const fetchMessages = async (conversationId) => {\n        try {\n            const response = await fetch(`http://localhost:3001/messages/${conversationId}`);\n            const data = await response.json();\n            setMessages(data);\n        } catch (error) {\n            console.error('Error fetching messages:', error);\n        }\n    };\n\n    // Обрабатываем выбор беседы\n    const handleSelectConversation = (conversation) => {\n        setSelectedConversation(conversation);\n        fetchMessages(conversation.id);\n    };\n\n    // Отправляем новое сообщение\n    const handleSendMessage = async () => {\n        if (!newMessage.trim()) return;\n\n        const message = {\n            conversation_id: selectedConversation.id,\n            sender_id: user.id,\n            content: newMessage,\n        };\n\n        try {\n            const response = await fetch('http://localhost:3001/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(message),\n            });\n\n            if (response.ok) {\n                const savedMessage = await response.json();\n                setMessages((prevMessages) => [...prevMessages, savedMessage]);\n                setNewMessage('');\n            }\n        } catch (error) {\n            console.error('Error sending message:', error);\n        }\n    };\n\n    return (\n        <div className=\"chats-container\">\n            <div className=\"conversations-list\">\n                <h2>Conversations</h2>\n                {conversations.map((conversation) => (\n                    <div\n                        key={conversation.id}\n                        className={`conversation-item ${\n                            selectedConversation?.id === conversation.id ? 'active' : ''\n                        }`}\n                        onClick={() => handleSelectConversation(conversation)}\n                    >\n                        {conversation.participants\n                            .filter((participantId) => participantId !== user.id)\n                            .map((participantId) => (\n                                <span key={participantId}>User {participantId}</span>\n                            ))}\n                    </div>\n                ))}\n            </div>\n            <div className=\"chat-window\">\n                {selectedConversation ? (\n                    <>\n                        <div className=\"messages-list\">\n                            {messages.map((message) => (\n                                <div\n                                    key={message.id}\n                                    className={`message-item ${\n                                        message.sender_id === user.id ? 'sent' : 'received'\n                                    }`}\n                                >\n                                    {message.content}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"message-input\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Type a message...\"\n                                value={newMessage}\n                                onChange={(e) => setNewMessage(e.target.value)}\n                            />\n                            <button onClick={handleSendMessage}>Send</button>\n                        </div>\n                    </>\n                ) : (\n                    <div className=\"no-conversation-selected\">\n                        <p>Select a conversation to start chatting</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Chats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}