{"ast":null,"code":"var _jsxFileName = \"/Users/nurbol/Documents/react-start/client/src/Pages/ManageUsers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport TabBar from '../Components/TabBar';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../Styles/ManageUsers.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageUsers() {\n  _s();\n  const user = useSelector(state => state.auth.user);\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (!user) {\n      toast.warn('You must be logged in to manage users');\n      navigate('/login');\n      return;\n    }\n    if (user.role !== 'admin') {\n      toast.error('Only admins can manage users');\n      navigate('/home');\n      return;\n    }\n    if (user.role === 'ban') {\n      toast.error('You are banned and cannot manage users');\n      navigate('/home');\n      return;\n    }\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/users');\n        if (!response.ok) throw new Error('Failed to fetch users');\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        toast.error('Failed to fetch users');\n      }\n    };\n    fetchUsers();\n  }, [user, navigate]);\n  const banUser = async userId => {\n    if (userId === user.id) {\n      toast.warn('You cannot ban yourself');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3001/users/${userId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          role: 'ban'\n        })\n      });\n      if (!response.ok) throw new Error('Failed to ban user');\n      setUsers(prevUsers => prevUsers.map(u => u.id === userId ? {\n        ...u,\n        role: 'ban'\n      } : u));\n      toast.success('User banned successfully');\n    } catch (error) {\n      console.error('Error banning user:', error);\n      toast.error('Failed to ban user');\n    }\n  };\n  const unbanUser = async userId => {\n    try {\n      const response = await fetch(`http://localhost:3001/users/${userId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          role: 'user'\n        })\n      });\n      if (!response.ok) throw new Error('Failed to unban user');\n      setUsers(prevUsers => prevUsers.map(u => u.id === userId ? {\n        ...u,\n        role: 'user'\n      } : u));\n      toast.success('User unbanned successfully');\n    } catch (error) {\n      console.error('Error unbanning user:', error);\n      toast.error('Failed to unban user');\n    }\n  };\n  const resetPassword = async userId => {\n    try {\n      const defaultPassword = '12345678'; // Plain text password\n      const response = await fetch(`http://localhost:3001/users/${userId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: defaultPassword\n        })\n      });\n      if (!response.ok) throw new Error('Failed to reset password');\n      setUsers(prevUsers => prevUsers.map(u => u.id === userId ? {\n        ...u,\n        password: defaultPassword\n      } : u));\n      toast.success('Password reset successfully');\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      toast.error('Failed to reset password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: [/*#__PURE__*/_jsxDEV(TabBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content manage-users-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"user-list\",\n        children: users.map(u => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"user-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [u.username, \" - Role: \", u.role || 'user']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-actions\",\n            children: [u.role !== 'ban' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => banUser(u.id),\n              className: \"ban-button\",\n              disabled: u.id === user.id,\n              children: \"Ban\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => unbanUser(u.id),\n              className: \"unban-button\",\n              children: \"Unban\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => resetPassword(u.id),\n              className: \"reset-password-button\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, u.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageUsers, \"0gvImViyLCzafwUXDvo1Ux4+NBo=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = ManageUsers;\nexport default ManageUsers;\nvar _c;\n$RefreshReg$(_c, \"ManageUsers\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useNavigate","TabBar","toast","jsxDEV","_jsxDEV","ManageUsers","_s","user","state","auth","navigate","users","setUsers","warn","role","error","fetchUsers","response","fetch","ok","Error","data","json","console","banUser","userId","id","method","headers","body","JSON","stringify","prevUsers","map","u","success","unbanUser","resetPassword","defaultPassword","password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/nurbol/Documents/react-start/client/src/Pages/ManageUsers.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport TabBar from '../Components/TabBar';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../Styles/ManageUsers.css';\n\nfunction ManageUsers() {\n  const user = useSelector((state) => state.auth.user);\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    if (!user) {\n      toast.warn('You must be logged in to manage users');\n      navigate('/login');\n      return;\n    }\n\n    if (user.role !== 'admin') {\n      toast.error('Only admins can manage users');\n      navigate('/home');\n      return;\n    }\n\n    if (user.role === 'ban') {\n      toast.error('You are banned and cannot manage users');\n      navigate('/home');\n      return;\n    }\n\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/users');\n        if (!response.ok) throw new Error('Failed to fetch users');\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        toast.error('Failed to fetch users');\n      }\n    };\n\n    fetchUsers();\n  }, [user, navigate]);\n\n  const banUser = async (userId) => {\n    if (userId === user.id) {\n      toast.warn('You cannot ban yourself');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:3001/users/${userId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ role: 'ban' }),\n      });\n\n      if (!response.ok) throw new Error('Failed to ban user');\n      setUsers((prevUsers) =>\n        prevUsers.map((u) => (u.id === userId ? { ...u, role: 'ban' } : u))\n      );\n      toast.success('User banned successfully');\n    } catch (error) {\n      console.error('Error banning user:', error);\n      toast.error('Failed to ban user');\n    }\n  };\n\n  const unbanUser = async (userId) => {\n    try {\n      const response = await fetch(`http://localhost:3001/users/${userId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ role: 'user' }),\n      });\n\n      if (!response.ok) throw new Error('Failed to unban user');\n      setUsers((prevUsers) =>\n        prevUsers.map((u) => (u.id === userId ? { ...u, role: 'user' } : u))\n      );\n      toast.success('User unbanned successfully');\n    } catch (error) {\n      console.error('Error unbanning user:', error);\n      toast.error('Failed to unban user');\n    }\n  };\n\n  const resetPassword = async (userId) => {\n    try {\n      const defaultPassword = '12345678'; // Plain text password\n      const response = await fetch(`http://localhost:3001/users/${userId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password: defaultPassword }),\n      });\n\n      if (!response.ok) throw new Error('Failed to reset password');\n      setUsers((prevUsers) =>\n        prevUsers.map((u) => (u.id === userId ? { ...u, password: defaultPassword } : u))\n      );\n      toast.success('Password reset successfully');\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      toast.error('Failed to reset password');\n    }\n  };\n\n  return (\n    <div className=\"background-container\">\n      <TabBar />\n      <div className=\"content manage-users-content\">\n        <h1>Manage Users</h1>\n        <ul className=\"user-list\">\n          {users.map((u) => (\n            <li key={u.id} className=\"user-item\">\n              <span>\n                {u.username} - Role: {u.role || 'user'}\n              </span>\n              <div className=\"user-actions\">\n                {u.role !== 'ban' ? (\n                  <button\n                    onClick={() => banUser(u.id)}\n                    className=\"ban-button\"\n                    disabled={u.id === user.id}\n                  >\n                    Ban\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => unbanUser(u.id)}\n                    className=\"unban-button\"\n                  >\n                    Unban\n                  </button>\n                )}\n                <button\n                  onClick={() => resetPassword(u.id)}\n                  className=\"reset-password-button\"\n                >\n                  Reset Password\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ManageUsers;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}